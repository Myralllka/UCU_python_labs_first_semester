<?xml version="1.0" encoding="UTF-8" standalone="no"?><xmap-content xmlns="urn:xmind:xmap:xmlns:content:2.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" modified-by="aroma" timestamp="1509365484885" version="2.0"><sheet id="0a3164pvbg65fbtmn6j19l54vh" modified-by="aroma" theme="78lrhuhjl8lls6sbivgqfnbpvm" timestamp="1509365484885"><topic id="5khp1p86c0amp367p0ek2q89a5" modified-by="aroma" structure-class="org.xmind.ui.map.unbalanced" timestamp="1509362155321"><title svg:width="357">Списки, тип даних (list)</title><children><topics type="attached"><topic id="35jfl1ot1rcfeos967nj7c24hj" modified-by="aroma" timestamp="1509361784443"><title>Визначення</title><children><topics type="attached"><topic id="5757firbs1feen3llimf2t203u" modified-by="aroma" timestamp="1509361666759"><title>Списки це послідовність посилань на об'єкти</title></topic></topics></children></topic><topic id="6ff38p95skclgvvkham9l64cl0" modified-by="aroma" timestamp="1509361864709"><title>Властивості</title><children><topics type="attached"><topic id="6760iqv949njnlu4usgfv8c661" modified-by="aroma" timestamp="1509361687096"><title>Списки - (list) змінюваний тип даних</title></topic><topic id="1e8g1dfm6uf5umefsail3jhjp0" modified-by="aroma" timestamp="1509360035703"><title svg:width="500">Списки зазавичай використовуються для збереження колекцій однотипних об'єктів</title></topic><topic id="0ufbsgvte7jeadrelspimhtk1b" modified-by="aroma" timestamp="1509362216544"><title>Aliases</title></topic></topics></children></topic><topic id="54efool6ot29kqmshm734i8bfi" modified-by="aroma" timestamp="1509360035707"><title>Способи створення</title><children><topics type="attached"><topic id="216jas8pglsentm322nc3rnkh3" modified-by="aroma" timestamp="1509360035705"><title>Безпосередньо</title><children><topics type="attached"><topic id="6fgdrpqqpe1hg191itk0g39koa" modified-by="aroma" timestamp="1509360035704"><title>Using a pair of square brackets to denote the empty list: []</title></topic><topic id="4e81a9bdt0ior741ab6n8obfke" modified-by="aroma" timestamp="1509360035705"><title>Using square brackets, separating items with commas: [a], [a, b, c]</title></topic></topics></children></topic><topic id="2n28b5t0og9f4deq5lqrishmfg" modified-by="aroma" timestamp="1509360035706"><title>Функція list</title><children><topics type="attached"><topic id="038ab69igrahjup109jrm15krs" modified-by="aroma" timestamp="1509360035706"><title>Using the type constructor: list() or list(iterable)</title></topic></topics></children></topic><topic id="0d4fs6o6td0fbmboakd0lber0p" modified-by="aroma" timestamp="1509360035707"><title>list comprehension</title><children><topics type="attached"><topic id="3luff81bp738v8gtcttb925po6" modified-by="aroma" timestamp="1509360035706"><title>Using a list comprehension: [x for x in iterable]</title></topic></topics></children></topic><topic id="77al3jdfm09e3eua2qblqchbuh" modified-by="aroma" timestamp="1509362031380"><title>метод str.split()</title></topic></topics></children></topic><topic branch="folded" id="0sp9tt43cqm6b8o77cqipssjlt" modified-by="aroma" timestamp="1509362182888"><title>list comprehension</title><children><topics type="attached"><topic id="40osmo5irhj65urvrkhgt7dt64" modified-by="aroma" timestamp="1509360035708"><title svg:width="623">List comprehensions provide a concise way to create lists. Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition.</title></topic><topic id="0lbopj97nrvt0s1tj6lfnml8gf" modified-by="aroma" timestamp="1509360035709"><title svg:width="523">A list comprehension consists of brackets containing an expression followed by a for clause, then zero or more for or if clauses. The result will be a new list resulting from evaluating the expression in the context of the for and if clauses which follow it. </title></topic><topic id="4mg41i5tpm5uepjknej1kn9v0s" modified-by="aroma" timestamp="1509360035709"><title>&gt;&gt;&gt; squares = []&#13;
&gt;&gt;&gt; for x in range(10):&#13;
...     squares.append(x**2)&#13;
...&#13;
&gt;&gt;&gt; squares&#13;
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</title></topic><topic id="6vc84qdbamnf5f7911veg3j3rg" modified-by="aroma" timestamp="1509360035710"><title>squares = [x**2 for x in range(10)]</title></topic><topic id="4bfe4jti8dlosn9rf2grhgm4s3" modified-by="aroma" timestamp="1509360035710"><title svg:width="288">&gt;&gt;&gt; [(x, y) for x in [1,2,3] for y in [3,1,4] if x != y]&#13;
[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]</title></topic></topics></children></topic><topic id="6v5tcvl7qlb7b7bq08p47eq6uv" modified-by="aroma" timestamp="1509361640362"><title>Порівняння списків</title><children><topics type="attached"><topic id="5oc6uecn1coei11feesf9bvett" modified-by="aroma" timestamp="1509361183934"><title>Оператори порівняння</title></topic><topic id="6h5m32d4jj9st5auqkeqfcqmp0" modified-by="aroma" timestamp="1509361626497"><title>&lt;	strictly less than&#13;
&lt;=	less than or equal&#13;
&gt;	strictly greater than&#13;
&gt;=	greater than or equal&#13;
==	equal&#13;
!=	not equal&#13;
is	object identity&#13;
is not	negated object identity</title></topic><topic id="2sdtia32cq8plrabaohi6qd2p6" modified-by="aroma" timestamp="1509362289971"><title svg:width="500">Порівняння списків відбувається за елементами та рекурсивно на всю глибину вкладених у список об’єктів</title></topic></topics></children></topic><topic id="7659aaa781929c3gcoqntk81so" modified-by="aroma" timestamp="1509362324101"><title>Списки в циклі</title><children><topics type="attached"><topic id="3uo0f46v47op1bvasq25v4vjco" modified-by="aroma" timestamp="1509362744820"><title>Перебір елементів</title></topic><topic id="57h0lcf70m5nflj3bcd8pq3e61" modified-by="aroma" timestamp="1509362756546"><title>Перебір елементів за індексами</title></topic><topic id="2goa687a6m7v7s2kln77ab1kvk" modified-by="aroma" timestamp="1509362861314"><title>Модифікація списку в циклі може призводити до проблем</title></topic></topics></children></topic><topic id="16c57lies572cmolihosgebaua" modified-by="aroma" timestamp="1509365484885"><title>Методи</title><children><topics type="attached"><topic id="3ujdp60p62dticqurovnsr2u0e" modified-by="aroma" timestamp="1509360035721"><title>list.append(x)</title><children><topics type="attached"><topic id="6jn95c45nbhk33cg6qprc61ue9" modified-by="aroma" timestamp="1509360035721"><title svg:width="208">Add an item to the end of the list. Equivalent to a[len(a):] = [x].</title></topic></topics></children></topic><topic id="37usp4rmdfpq9j5md8dbojidge" modified-by="aroma" timestamp="1509360035721"><title>list.extend(iterable)</title><children><topics type="attached"><topic id="6h7sm5lf273mp8iug5hegucrlb" modified-by="aroma" timestamp="1509360035721"><title svg:width="361">Extend the list by appending all the items from the iterable. Equivalent to a[len(a):] = iterable.</title></topic></topics></children></topic><topic id="6s4f24eq2bjujcb5b392gh87b3" modified-by="aroma" timestamp="1509360035722"><title>list.insert(i, x)</title><children><topics type="attached"><topic id="5e172qusddl6rf63b27ps9h8bd" modified-by="aroma" timestamp="1509360035722"><title svg:width="430">Insert an item at a given position. The first argument is the index of the element before which to insert, so a.insert(0, x) inserts at the front of the list, and a.insert(len(a), x) is equivalent to a.append(x).</title></topic></topics></children></topic><topic id="1c2793jrr3jgtacootj8os6v3i" modified-by="aroma" timestamp="1509360035722"><title>list.remove(x)</title><children><topics type="attached"><topic id="4t959g4jcnqp9k07dav17dviai" modified-by="aroma" timestamp="1509360035722"><title svg:width="314">Remove the first item from the list whose value is x. It is an error if there is no such item.</title></topic></topics></children></topic><topic id="4d3kuooo3anorn9rsm47u0hgak" modified-by="aroma" timestamp="1509360035723"><title>list.pop([i])</title><children><topics type="attached"><topic id="7j3245fetfuiugcqia163tb0cb" modified-by="aroma" timestamp="1509360035723"><title svg:width="371">Remove the item at the given position in the list, and return it. If no index is specified, a.pop() removes and returns the last item in the list. </title></topic></topics></children></topic><topic id="4mdne1mg10fosdab08h87nt753" modified-by="aroma" timestamp="1509360035723"><title>list.clear()</title><children><topics type="attached"><topic id="5br5393un6613hlqd5ihu83tj1" modified-by="aroma" timestamp="1509360035723"><title>Remove all items from the list. Equivalent to del a[:].</title></topic></topics></children></topic><topic id="63qg1ccakm9oev5clodenv20hb" modified-by="aroma" timestamp="1509360035723"><title>list.index(x[, start[, end]])</title><children><topics type="attached"><topic id="734r08l7up3un1ips7o7stu5aj" modified-by="aroma" timestamp="1509360035723"><title svg:width="408">Return zero-based index in the list of the first item whose value is x. Raises a ValueError if there is no such item.</title></topic></topics></children></topic><topic id="7k9m42oijqt0efea4n8b89o7fp" modified-by="aroma" timestamp="1509360035724"><title>list.count(x)</title><children><topics type="attached"><topic id="2tan5dc4c7rshe2f3je2vrt0va" modified-by="aroma" timestamp="1509360035724"><title>Return the number of times x appears in the list.</title></topic></topics></children></topic><topic id="7e0ddcfotm81u9hgl1eaf298v4" modified-by="aroma" timestamp="1509360035724"><title>list.sort(key=None, reverse=False)</title><children><topics type="attached"><topic id="7vgecl632o970h856b681menq5" modified-by="aroma" timestamp="1509360035724"><title svg:width="379">Sort the items of the list in place (the arguments can be used for sort customization, see sorted() for their explanation).</title></topic></topics></children></topic><topic id="6ot795fib08jd8fj1h7ns6ofb4" modified-by="aroma" timestamp="1509360035725"><title>list.reverse()</title><children><topics type="attached"><topic id="2j7gsmk7rltr9ppevl8fmhe96n" modified-by="aroma" timestamp="1509360035725"><title svg:width="258">Reverse the elements of the list in place.</title></topic></topics></children></topic><topic id="60sdf5hq7lmeifui3s3bo3lprs" modified-by="aroma" timestamp="1509360035726"><title>list.copy()</title><children><topics type="attached"><topic id="08kdknkbbdr0o2237tj8d52bjb" modified-by="aroma" timestamp="1509360035726"><title svg:width="317">Return a shallow copy of the list. Equivalent to a[:].</title></topic></topics></children></topic></topics></children></topic><topic id="6sr24dmpthac89nbqc2ssfk2k2" modified-by="aroma" timestamp="1509362155165"><title>Операції над списками</title><children><topics type="attached"><topic id="6fkf3lb8nv9g6gaehibjte2k3g" modified-by="aroma" timestamp="1509365480896"><title svg:width="157">Операції спільні для всіх типів послідовностей</title><children><topics type="attached"><topic id="43qrbcs3vg3drjucif8h9bmh1d" modified-by="aroma" timestamp="1509360035712"><title>x in s -&gt; True if an item of s is equal to x, else False</title></topic><topic id="4m953ngn021ga8s7h0n6f2jqi0" modified-by="aroma" timestamp="1509360035712"><title>x not in s -&gt; False if an item of s is equal to x, else True</title></topic><topic id="747o22edjjb2pjs7lbd10m4svs" modified-by="aroma" timestamp="1509360035713"><title>s + t -&gt; the concatenation of s and t</title></topic><topic id="1c1ttto8k38a2eh28e06b83a5g" modified-by="aroma" timestamp="1509360035713"><title>s * n or n * s -&gt; equivalent to adding s to itself n times</title></topic><topic id="7jhneqv3em8jdvhkp278grmel9" modified-by="aroma" timestamp="1509360035713"><title>s[i] -&gt; ith item of s, origin 0</title></topic><topic id="588v61a8a3igl6ir9rfo3ti79h" modified-by="aroma" timestamp="1509360035714"><title>s[i:j] -&gt; slice of s from i to j</title></topic><topic id="08vrhjimcu9uit5cka470btdf6" modified-by="aroma" timestamp="1509360035714"><title>s[i:j:k] -&gt; slice of s from i to j with step k</title></topic><topic id="630pu4ulr1okgac9b9nk5e6j2p" modified-by="aroma" timestamp="1509360035714"><title>len(s) -&gt; length of s</title></topic><topic id="2ve2ch7t1l9ubbet8048gfa8un" modified-by="aroma" timestamp="1509360035715"><title>min(s) -&gt; smallest item of s</title></topic><topic id="2s27qvm6e1m33vo7mvr4li3ejr" modified-by="aroma" timestamp="1509360035715"><title>max(s) -&gt; largest item of s</title></topic><topic id="4pskoeoj1ut0k977o1t3safs53" modified-by="aroma" timestamp="1509360035715"><title svg:width="500">s.index(x[, i[, j]]) -&gt; index of the first occurrence of x in s (at or after index i and before index j)</title></topic><topic id="7mbktpb3e06hd0h2haurmbr8so" modified-by="aroma" timestamp="1509360035716"><title>s.count(x) -&gt; total number of occurrences of x in s</title></topic></topics></children></topic><topic id="1pgqip2opcvt2dftpiqsqeavar" modified-by="aroma" timestamp="1509365482365"><title svg:width="208">Операції спільні для змінюваних типів  послідовностей</title><children><topics type="attached"><topic id="1l4mdrsc9vi31iu84h2d03eqis" modified-by="aroma" timestamp="1509360035716"><title>s[i] = x -&gt; item i of s is replaced by x</title></topic><topic id="187dt7lj9n9ufvg5nb6lol2nbr" modified-by="aroma" timestamp="1509360035717"><title svg:width="500">s[i:j] = t -&gt; slice of s from i to j is replaced by the contents of the iterable t</title></topic><topic id="35gbsjiknkt5s1fu370o8disoh" modified-by="aroma" timestamp="1509360035717"><title>del s[i:j] -&gt; same as s[i:j] = []</title></topic><topic id="1iqqhh2dcpg31f00mikm1clo7o" modified-by="aroma" timestamp="1509360035717"><title>s[i:j:k] = t -&gt; the elements of s[i:j:k] are replaced by those of t</title></topic><topic id="7jkdk4r5glvi92oqm036sge5ac" modified-by="aroma" timestamp="1509360035718"><title>del s[i:j:k] -&gt; emoves the elements of s[i:j:k] from the list</title></topic><topic id="47p9fkjm0ob2abpmp7u7ndib1d" modified-by="aroma" timestamp="1509360035718"><title svg:width="500">s.append(x) -&gt; appends x to the end of the sequence (same as s[len(s):len(s)] = [x])</title></topic><topic id="7hhfgmesqd3p51o18t2665khsu" modified-by="aroma" timestamp="1509360035718"><title>s.clear() -&gt; removes all items from s (same as del s[:])</title></topic><topic id="1rensgu27dr4hdp5s4qhnvedm5" modified-by="aroma" timestamp="1509360035718"><title>s.copy() -&gt; creates a shallow copy of s (same as s[:])</title></topic><topic id="4mc12gtd815125n4h0jd6oceeg" modified-by="aroma" timestamp="1509360035719"><title svg:width="500">s.extend(t) or s += t -&gt; extends s with the contents of t (for the most part the same as s[len(s):len(s)] = t)</title></topic><topic id="66umvtvan8f5jdbk12qlq9mmdp" modified-by="aroma" timestamp="1509360035719"><title>s *= n -&gt; updates s with its contents repeated n times</title></topic><topic id="5s9g45pv79sjca0aj9uiqhe0ni" modified-by="aroma" timestamp="1509360035719"><title svg:width="500">s.insert(i, x) -&gt; inserts x into s at the index given by i (same as s[i:i] = [x])</title></topic><topic id="44iqncjefpm9nr57o7cig22q2r" modified-by="aroma" timestamp="1509360035719"><title>s.pop([i]) -&gt; retrieves the item at i and also removes it from s</title></topic><topic id="31u0jqqevm2m7mcmg9drofrvgp" modified-by="aroma" timestamp="1509360035720"><title>s.remove(x) -&gt; remove the first item from s where s[i] == x</title></topic><topic id="1lom4ghgfnjsjnv2cpgp4nmr5t" modified-by="aroma" timestamp="1509360035720"><title>s.reverse() -&gt; reverses the items of s in place</title></topic></topics></children></topic></topics></children></topic></topics></children><extensions><extension provider="org.xmind.ui.map.unbalanced"><content><right-number>6</right-number></content></extension></extensions></topic><title>Sheet 1</title></sheet></xmap-content>